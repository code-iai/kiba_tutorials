<launch>
  <arg name="py_planner" default="true" />

  <include file="$(find ur_description)/launch/ur5_upload.launch" >
    <arg name="limited" value="true" />
  </include>

  <rosparam command="load" file="$(find kiba_control)/config/control.yaml" />

  <remap from="/joint_trajectory_controller/follow_joint_trajectory"
         to="/follow_joint_trajectory" />

  <node pkg="kiba_control" type="sim_hw_main" name="robot"
        output="screen" />

  <node pkg="controller_manager" type="spawner" name="spawner" output="screen"
        args="joint_state_controller joint_trajectory_controller --shutdown-timeout 0.5" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"
        name="robot_state_publisher" />

  <node pkg="kiba_control" type="interactive_marker_bridge" name="interactive_marker_bridge" >
    <param name="marker_name" value="ee_goal" />
    <param name="marker_scale" value="0.2" />
    <param name="frame_id" value="tool0" />
  </node>

  <node pkg="kiba_control" type="kinematics_planner" name="kinematics_planner"
        output="screen" unless="$(arg py_planner)" >
    <param name="root_frame_name" value="base_link" />
    <param name="tip_frame_name" value="tool0" />
    <remap from="~joint_states" to="/joint_states" />
    <remap from="~goal" to="/interactive_marker_bridge/goal" />
  </node>

  <node pkg="kiba_control" type="kinematics_planner.py" name="kinematics_planner"
        output="screen" if="$(arg py_planner)" >
    <param name="root_frame_name" value="base_link" />
    <param name="tip_frame_name" value="tool0" />
    <remap from="~joint_states" to="/joint_states" />
    <remap from="~goal" to="/interactive_marker_bridge/goal" />
  </node>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find kiba_control)/config/ur5.rviz"
        required="true" />
</launch>
